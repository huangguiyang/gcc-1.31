#!/bin/sh
# Configuration script for GNU CC
#   Copyright (C) 1988 Free Software Foundation, Inc.

#This file is part of GNU CC.

#GNU CC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY.  No author or distributor
#accepts responsibility to anyone for the consequences of using it
#or for whether it serves any particular purpose or works at all,
#unless he says so in writing.  Refer to the GNU CC General Public
#License for full details.

#Everyone is granted permission to copy, modify and redistribute
#GNU CC, but only under the conditions described in the
#GNU CC General Public License.   A copy of this license is
#supposed to have been given to you along with GNU CC so you
#can know your rights and responsibilities.  It should be in a
#file named COPYING.  Among other things, the copyright notice
#and this notice must be preserved on all copies.

#
# Shell script to create proper links to machine-dependent files in
# preparation for compiling gcc.
#
# Usage: config.gcc [vint] machine
#
# If config.gcc succeeds, it leaves its status in config.status.
# If config.gcc fails after disturbing the status quo, 
# 	config.status is removed.
#

progname=$0

remove=rm
hard_link=ln
symbolic_link='ln -s'

#for Test
#remove="echo rm"
#hard_link="echo ln"
#symbolic_link="echo ln -s"

case $# in
2)
	vint=on
	shift
	;;
*)
	;;
esac

case $# in
1)
	machine=$1

	case $machine in
	vax)					# for vaxen running bsd
		;;
	vms)					# for vaxen running VMS
		cpu_type=vax
		configuration_file=xm-${machine}.h
		target_machine=tm-${machine}.h
		;;
	vax-sysv | vaxv)			# for vaxen running system V
		cpu_type=vax
		configuration_file=xm-vaxv.h
		target_machine=tm-vaxv.h
		;;
	sequent-i386)			# for Intel 80386's on Sequent Symmetry
		cpu_type=i386
		configuration_file=xm-i386.h
		target_machine=tm-seq386.h
		;;
	i386-sysv | i386v)		# for Intel 80386's running system V
		machine=i386v
		cpu_type=i386
		configuration_file=xm-${machine}.h
		target_machine=tm-${machine}.h
		;;
	sun4 | sun-4)
		cpu_type=sparc
		configuration_file=xm-sparc.h
		target_machine=tm-sun4os3.h
		;;
	sun3 | sun-3)
		cpu_type=m68k
		configuration_file=xm-m68k.h
		target_machine=tm-sun3.h
		;;
	sun2 | sun-2)
		cpu_type=m68k
		configuration_file=xm-m68k.h
		target_machine=tm-sun2.h
		;;
	sun386 | sun386i | roadrunner)
		cpu_type=i386
		configuration_file=xm-sun386i.h
		target_machine=tm-sun386i.h
		;;
	sun4-os4 | sun-4-os4)
		cpu_type=sparc
		configuration_file=xm-sunos4.h
		target_machine=tm-${cpu_type}.h
		;;
	sun3-os4 | sun-3-os4)
		cpu_type=m68k
		configuration_file=xm-sunos4.h
		target_machine=tm-sun3.h
		;;
	sun2-os4 |sun-2-os4)
		cpu_type=m68k
		configuration_file=xm-sunos4.h
		target_machine=tm-sun2.h
		;;
	hp9k320)			# HP 9000 series 300 with gcc alone
		cpu_type=m68k
		configuration_file=xm-hp9k320.h
		;;
	hp9k320g)			#    with gnu as, ld and gdb
		cpu_type=m68k
		configuration_file=xm-hp9k320.h
		;;
	isi68)
		cpu_type=m68k
		;;
	news800)
		cpu_type=m68k
		;;
	3b1)
		cpu_type=m68k
		configuration_file=xm-${machine}.h
		;;
	sequent-ns32k | sequent)
		cpu_type=ns32k
		aux_output=output-ns32k.c
		;;
	encore)
		cpu_type=ns32k
		aux_output=output-ns32k.c
		;;
	genix)
		machine=ns32k
		cpu_type=ns32k
		configuration_file=xm-gnx.h
		;;
	88000)
		cpu_type=m88k
		target_machine=tm-${cpu_type}.h
		;;
#	370)
#		machine=370
#		;;
	esac

		# if cput_type is not set, define cpu_type to machine.
		#
	cpu_type=${cpu_type=$machine}
	configuration_file=${configuration_file=xm-$cpu_type.h}
	target_machine=${target_machine=tm-$machine.h}
	machine_description=${cpu_type}.md
	aux_output=${aux_output=output-$cpu_type.c}

	if [ xx${vint} = xx ]
	then
		files="$configuration_file $target_machine
			$machine_description $aux_output"
		links="config.h tm.h md aux-output.c"
	else
		files="$configuration_file tm-vmc.h $target_machine
			$machine_description $aux_output"
		links="config.h tm.h tm-pre.h md aux-output.c"
	fi

	while [ -n "$files" ]
	do
		# set file to car of files, files to cdr of files
		set $files; file=$1; shift; files=$*
		set $links; link=$1; shift; links=$*

		if [ ! -r $file ]
		then
			echo "$progname: cannot create a link \`$link',"
			echo "since the file \`$file' does not exist."
			exit 1
		fi

		$remove -f $link
		rm -f config.status
		# Make a symlink if possible, otherwise try a hard link
		$symbolic_link $file $link 2>/dev/null || $hard_link $file $link

		if [ ! -r $link ]
		then
			echo "$progname: unable to link \`$link' to \`$file'."
			exit 1
		fi
		echo "Linked \`$link' to \`$file'."
	done

	if [ xx${vint} = xx ]
	then
		echo "Links are now set up for use with a $machine." \
			| tee config.status
	else
		echo "Links are now set up for use with a $machine (vint)." \
			| tee config.status
	fi
	exit 0

	;;
*)
	echo "Usage: $progname machine"
	echo -n "Where \`machine' is something like "
	echo "\`vax', \`sun3', \`umax', etc."
	if [ -r config.status ]
	then
		cat config.status
	fi
	exit 1
	;;
esac
